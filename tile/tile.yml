---
name: mongodb-on-demand
icon_file: resources/icon.png
label: MongoDB-On-Demand
description: 'MongoDB On Demand'
metadata_version: 1.8
service_broker: true

stemcell_criteria:
  os: ubuntu-trusty
  version: '3421'

properties:
- name: broker_basic_auth
  type: simple_credentials

forms:
- name: mongodb_ops_form
  label: MongoDB On-Demand
  description: Configure MongoDB Ops Manager
  properties:
  - name: url
    type: string
    configurable: true
    label: MongoDB Ops Manager URL
    description: This will be the URL for your MongoDB Ops Manager. Please ensure that it is reachable.
  - name: username
    type: string
    configurable: true
    label: MongoDB Ops Manager username
    description: This will be the username for your MongoDB Ops Manager.
  - name: api_key
    type: secret
    configurable: true
    label: MongoDB Ops Manager API key
    description: This will be the API Key for your MongoDB Ops Manager.
  - name: vm_type
    type: vm_type_dropdown
    optional: true
    configurable: true
    label: MongoDB VM Type
    description: Select the VM Type
  - name: disk_type
    type: disk_type_dropdown
    optional: true
    configurable: true
    label: MongoDB disk type
    description: Select the Disk Type
  - name: az_multi_select
    type: service_network_az_multi_select
    optional: false
    configurable: true
    label: MongoDB availability zone(s)
    description: Select one or more availability zones

requires_product_versions:
- name: cf
  version: "~> 1.3"

packages:
- name: on-demand-service-broker
  type: bosh-release
  path: resources/on-demand-service-broker-0.17.0.tgz
- name: mongodb
  type: bosh-release
  path: resources/mongodb-0.8.3.tgz
  jobs:
  - name: broker
    label: MongoDB-ODB
    templates:
    - name: broker
      release: on-demand-service-broker
    - name: mongodb_service_adapter
      release: mongodb
    max_in_flight: 1
    memory: 1024
    ephemeral_disk: 2048
    persistent_disk: 1024
    cpu: 1
    static_ip: 0
    dynamic_ip: 1
    single_az_only: true
    instances: 1
    properties:
      port: 8080
      username: (( .properties.broker_basic_auth.identity ))
      password: (( .properties.broker_basic_auth.password ))
      disable_ssl_cert_verification: (( ..cf.ha_proxy.skip_cert_verify.value ))
      bosh:
        url: https://(( $director.hostname )):25555
        root_ca_cert: (( $director.ca_public_key ))
        authentication:
          uaa:
            url: https://(( $director.hostname )):8443
            client_id: (( $self.uaa_client_name ))
            client_secret: (( $self.uaa_client_secret ))
      cf:
        url: (( $runtime.system_api_url ))
        authentication:
          url: "https://uaa.(( ..cf.cloud_controller.system_domain.value ))"
          user_credentials:
            username: (( ..cf.uaa.admin_credentials.identity ))
            password: (( ..cf.uaa.admin_credentials.password ))
      service_adapter:
        path: /var/vcap/packages/mongodb-service-adapter/bin/mongodb-service-adapter
      service_deployment:
        releases:
        - name: mongodb
          version: "0.8.3"
          jobs: [mongod_node, mongodb_config_agent]
        stemcell:
          os: ubuntu-trusty
          version: "(( $self.stemcell_version ))"
      service_catalog:
        id: D94A086D-203D-4966-A6F1-60A9E2300F72
        service_name: mongodb-odb
        service_description: MongoDB Service
        bindable: true
        plan_updatable: true
        tags: [mongodb]
        plans:
        - name: standalone
          plan_id: f40cf0fa-4eb9-446c-a429-0b1ea2ae6ae7
          description: Standalone Instance
          instance_groups:
          - name: mongod_node
            vm_type: (( .properties.vm_type.value ))
            instances: 1
            persistent_disk_type: (( .properties.disk_type.value ))
            networks: [(( $self.service_network ))]
            azs: (( .properties.az_multi_select.value ))
          properties:
            id: standalone
            mongo_ops:
              url: (( .properties.url.value ))
              username: (( .properties.username.value ))
              api_key: (( .properties.api_key.value ))
        - name: replica_set
          plan_id: fee3933e-42cb-4964-b66e-79498f94e968
          description: Replica Set
          instance_groups:
          - name: mongod_node
            vm_type: (( .properties.vm_type.value ))
            instances: 3
            persistent_disk_type: (( .properties.disk_type.value ))
            networks: [(( $self.service_network ))]
            azs: (( .properties.az_multi_select.value ))
          properties:
            id: replica_set
            mongo_ops:
              url: (( .properties.url.value ))
              username: (( .properties.username.value ))
              api_key: (( .properties.api_key.value ))
        - name: sharded_cluster
          plan_id: 477a196a-9e28-4103-87d3-593767448c9f
          description: Sharded Cluster
          metadata:
            display_name: Sharded Cluster
            bullets: []
          quotas:
            service_instance_limit: 10
          instance_groups:
            - name: mongod_node
              vm_type: (( .properties.vm_type.value ))
              instances: 15
              persistent_disk_type: (( .properties.disk_type.value ))
              networks: [(( $self.service_network ))]
              azs: (( .properties.az_multi_select.value ))
          properties:
            id: sharded_cluster
            mongo_ops:
              url: (( .properties.url.value ))
              username: (( .properties.username.value ))
              api_key: (( .properties.api_key.value ))
  - name: smoke_tests
    label: 'Smoke Tests'
    lifecycle: errand
    templates:
    - name: smoke-tests
      release: mongodb
    max_in_flight: 1
    memory: 1024
    ephemeral_disk: 2048
    persistent_disk: 0
    cpu: 1
    static_ip: 0
    dynamic_ip: 1
    single_az_only: true
    instances: 1
    properties:
      cf:
        api_url: (( $runtime.system_api_url ))
        apps_domain: (( ..cf.cloud_controller.apps_domain.value ))
        system_domain: (( ..cf.cloud_controller.system_domain.value ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
        skip_ssl_validation: (( ..cf.ha_proxy.skip_cert_verify.value ))
      mongodb:
        service_plans: ["standalone"]
        service_name: "mongodb-odb"
  - name: register_on_demand_service_broker
    label: 'On Demand Service Broker Registrar'
    lifecycle: errand
    post_deploy: true
    run_post_deploy_errand_default: when-changed
    templates:
    - name: register-broker
      release: on-demand-service-broker
    max_in_flight: 1
    memory: 1024
    ephemeral_disk: 2048
    persistent_disk: 0
    cpu: 1
    static_ip: 0
    dynamic_ip: 1
    single_az_only: true
    instances: 1
    properties:
      broker_name: mongodb-odb
      disable_ssl_cert_verification: (( ..cf.ha_proxy.skip_cert_verify.value ))
      cf:
        api_url: (( $runtime.system_api_url ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
  - name: delete_subdeployments_on_demand_service_broker
    label: 'Delete all instances deployed by the On Demand Service Broker'
    lifecycle: errand
    pre_delete: true
    templates:
    - name: delete-all-service-instances
      release: on-demand-service-broker
    max_in_flight: 1
    memory: 1024
    ephemeral_disk: 2048
    persistent_disk: 0
    cpu: 1
    static_ip: 0
    dynamic_ip: 1
    single_az_only: true
    instances: 1
    properties:
      cf:
        api_url: (( $runtime.system_api_url ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
  - name: unregister_on_demand_service_broker
    label: 'On Demand Service Broker Deregistrar'
    lifecycle: errand
    pre_delete: true
    templates:
    - name: deregister-broker
      release: on-demand-service-broker
    max_in_flight: 1
    memory: 1024
    ephemeral_disk: 2048
    persistent_disk: 0
    cpu: 1
    static_ip: 0
    dynamic_ip: 1
    single_az_only: true
    instances: 1
    properties:
      broker_name: mongodb-odb
      disable_ssl_cert_verification: (( ..cf.ha_proxy.skip_cert_verify.value ))
      cf:
        api_url: (( $runtime.system_api_url ))
        admin_username: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
